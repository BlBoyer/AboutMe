{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ben\\\\Documents\\\\xdrive\\\\Apples\\\\Projects\\\\AboutMe\\\\aboutme\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react'; //make object.keys the first variable used to populate the list, then change the array to object.values much easier\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState({\n    id: 0,\n    name: '',\n    skills: [],\n    likes: [],\n    contact: ''\n  });\n  const [meDisp, setMeDisp] = useState([...Object.keys(data)]);\n  /*const populate = (_index, _item) =>{\n   let popEl = document.getElementById(`cues${_index}`);\n   popEl.textContent = data[_item];\n  }*/\n\n  const changeProp = (_index, _item) => {\n    var mutated;\n    console.log(meDisp.splice(_index, 1, data._item));\n    meDisp.splice(_index, 1, data[_item]);\n  }; // const [meDisp, setMeDisp]=useState(Object.keys(data));\n\n\n  useEffect(() => {\n    //api fetch goes here\n    //Note: template for actions is 'controller/action/id?'\n    const fetchMe = async () => {\n      const response = await fetch(\"https://localhost:7010/Owner/aboutme\");\n      let myData;\n\n      try {\n        myData = await response.json();\n        setData(myData);\n      } catch (err) {\n        alert(err);\n      }\n\n      console.log(myData);\n    };\n\n    fetchMe();\n    setMeDisp(Object.keys(data));\n  }, []); //id, name, skills, likes, contact\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"About Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: meDisp.slice(1).map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          id: 'cues' + index,\n          className: \"tag\",\n          onClick: () => changeProp(index + 1, item),\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"pEPenedKx1YhnOycjKpVdoB1Rh8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Ben/Documents/xdrive/Apples/Projects/AboutMe/aboutme/src/App.js"],"names":["useState","useEffect","App","data","setData","id","name","skills","likes","contact","meDisp","setMeDisp","Object","keys","changeProp","_index","_item","mutated","console","log","splice","fetchMe","response","fetch","myData","json","err","alert","slice","map","item","index"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CACA;;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAgBJ,QAAQ,CAAC;AAACK,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,IAAI,EAAC,EAAZ;AAAgBC,IAAAA,MAAM,EAAC,EAAvB;AAA2BC,IAAAA,KAAK,EAAC,EAAjC;AAAqCC,IAAAA,OAAO,EAAC;AAA7C,GAAD,CAA9B;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAoBX,QAAQ,CAAC,CAAC,GAAGY,MAAM,CAACC,IAAP,CAAYV,IAAZ,CAAJ,CAAD,CAAlC;AACA;AACF;AACA;AACA;;AACE,QAAMW,UAAU,GAAG,CAACC,MAAD,EAASC,KAAT,KAAmB;AACpC,QAAIC,OAAJ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,MAAM,CAACU,MAAP,CAAcL,MAAd,EAAsB,CAAtB,EAAyBZ,IAAI,CAACa,KAA9B,CAAZ;AACAN,IAAAA,MAAM,CAACU,MAAP,CAAcL,MAAd,EAAsB,CAAtB,EAAyBZ,IAAI,CAACa,KAAD,CAA7B;AACD,GAJD,CAPa,CAYd;;;AACCf,EAAAA,SAAS,CAAC,MAAI;AACf;AACA;AACA,UAAMoB,OAAO,GAAG,YAAY;AAC3B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAD,CAA5B;AACA,UAAIC,MAAJ;;AACA,UAAI;AACFA,QAAAA,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAf;AACArB,QAAAA,OAAO,CAACoB,MAAD,CAAP;AACD,OAHD,CAGE,OAAME,GAAN,EAAW;AACXC,QAAAA,KAAK,CAACD,GAAD,CAAL;AACD;;AACDR,MAAAA,OAAO,CAACC,GAAR,CAAYK,MAAZ;AACC,KAVF;;AAWCH,IAAAA,OAAO;AACPV,IAAAA,SAAS,CAACC,MAAM,CAACC,IAAP,CAAYV,IAAZ,CAAD,CAAT;AACC,GAhBQ,EAgBP,EAhBO,CAAT,CAba,CA8Bb;;AACA,sBACE;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BACE;AAAA,kBACEO,MAAM,CAACkB,KAAP,CAAa,CAAb,EAAiBC,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,kBACrB;AAAI,UAAA,EAAE,EAAE,SAAOA,KAAf;AAAmC,UAAA,SAAS,EAAC,KAA7C;AAAmD,UAAA,OAAO,EAAE,MAAIjB,UAAU,CAACiB,KAAK,GAAC,CAAP,EAAUD,IAAV,CAA1E;AAAA,oBAA4FA;AAA5F,WAA2BC,KAA3B;AAAA;AAAA;AAAA;AAAA,gBADA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GA3CQ7B,G;;KAAAA,G;AA4CT,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from 'react';\n//make object.keys the first variable used to populate the list, then change the array to object.values much easier\nfunction App() {\n  const [data, setData]=useState({id:0, name:'', skills:[], likes:[], contact:''});\n  const [meDisp, setMeDisp]=useState([...Object.keys(data)]);\n  /*const populate = (_index, _item) =>{\n   let popEl = document.getElementById(`cues${_index}`);\n   popEl.textContent = data[_item];\n  }*/\n  const changeProp = (_index, _item) => {\n    var mutated\n    console.log(meDisp.splice(_index, 1, data._item));\n    meDisp.splice(_index, 1, data[_item]);\n  }\n // const [meDisp, setMeDisp]=useState(Object.keys(data));\n  useEffect(()=>{\n //api fetch goes here\n //Note: template for actions is 'controller/action/id?'\n const fetchMe = async () => {\n  const response = await fetch(\"https://localhost:7010/Owner/aboutme\");\n  let myData;\n  try {\n    myData = await response.json();\n    setData(myData);\n  } catch(err) {\n    alert(err);\n  }\n  console.log(myData);\n  }\n  fetchMe();\n  setMeDisp(Object.keys(data));\n  },[]);\n  //id, name, skills, likes, contact\n  return (\n    <div id=\"content\">\n      <h1>About Me</h1>\n      <div>\n        <ul>{\n          meDisp.slice(1,).map((item, index)=>\n          <li id={'cues'+index} key={index}  className=\"tag\" onClick={()=>changeProp(index+1, item)}>{item}</li>\n          )\n        }</ul>\n      </div>\n  </div>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}