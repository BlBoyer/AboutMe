{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ben\\\\Documents\\\\xdrive\\\\Apples\\\\Projects\\\\AboutMe\\\\aboutme\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState({\n    id: 0,\n    name: '',\n    skills: [],\n    likes: [],\n    contact: ''\n  });\n  useEffect(() => {\n    //api fetch goes here\n    //Note: template for actions is 'controller/action/id?'\n    const fetchMe = async () => {\n      const response = await fetch(\"https://localhost:7010/Owner/aboutme\");\n      let myData;\n\n      try {\n        myData = await response.json();\n        setData(myData);\n      } catch (err) {\n        alert(err);\n      }\n\n      console.log(myData);\n    };\n\n    fetchMe();\n  }, []); //id, name, skills, likes, contact\n\n  var id = data.id;\n  var name = data.name;\n  var skills = [...data.skills];\n  var likes = [...data.likes];\n  var contact = data.contact;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tag\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: likes.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"AXMuOkdjKEYFIsh41XidtQYOQWY=\");\n\n_c = App;\nexport default App;\n/**/\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Ben/Documents/xdrive/Apples/Projects/AboutMe/aboutme/src/App.js"],"names":["useState","useEffect","App","data","setData","id","name","skills","likes","contact","fetchMe","response","fetch","myData","json","err","alert","console","log","map","item","index"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAgBJ,QAAQ,CAAC;AAACK,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,IAAI,EAAC,EAAZ;AAAgBC,IAAAA,MAAM,EAAC,EAAvB;AAA2BC,IAAAA,KAAK,EAAC,EAAjC;AAAqCC,IAAAA,OAAO,EAAC;AAA7C,GAAD,CAA9B;AACAR,EAAAA,SAAS,CAAC,MAAI;AACf;AACA;AACA,UAAMS,OAAO,GAAG,YAAY;AAC3B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAD,CAA5B;AACA,UAAIC,MAAJ;;AACA,UAAI;AACFA,QAAAA,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAf;AACAV,QAAAA,OAAO,CAACS,MAAD,CAAP;AACD,OAHD,CAGE,OAAME,GAAN,EAAW;AACXC,QAAAA,KAAK,CAACD,GAAD,CAAL;AACD;;AACDE,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACC,KAVF;;AAWCH,IAAAA,OAAO;AACN,GAfQ,EAeP,EAfO,CAAT,CAFa,CAkBb;;AACA,MAAIL,EAAE,GAACF,IAAI,CAACE,EAAZ;AACA,MAAIC,IAAI,GAACH,IAAI,CAACG,IAAd;AACA,MAAIC,MAAM,GAAC,CAAC,GAAGJ,IAAI,CAACI,MAAT,CAAX;AACA,MAAIC,KAAK,GAAC,CAAC,GAAGL,IAAI,CAACK,KAAT,CAAV;AACA,MAAIC,OAAO,GAACN,IAAI,CAACM,OAAjB;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACA;AAAA,gBACED,KAAK,CAACW,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACV;AAAA,kBAAiBD;AAAjB,SAASC,KAAT;AAAA;AAAA;AAAA;AAAA,cADA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAhCQnB,G;;KAAAA,G;AAiCT,eAAeA,GAAf;AACA","sourcesContent":["import { useState, useEffect } from 'react';\n\nfunction App() {\n  const [data, setData]=useState({id:0, name:'', skills:[], likes:[], contact:''});\n  useEffect(()=>{\n //api fetch goes here\n //Note: template for actions is 'controller/action/id?'\n const fetchMe = async () => {\n  const response = await fetch(\"https://localhost:7010/Owner/aboutme\");\n  let myData;\n  try {\n    myData = await response.json();\n    setData(myData);\n  } catch(err) {\n    alert(err);\n  }\n  console.log(myData);\n  }\n  fetchMe();\n  },[]);\n  //id, name, skills, likes, contact\n  var id=data.id;\n  var name=data.name;\n  var skills=[...data.skills];\n  var likes=[...data.likes];\n  var contact=data.contact;\n  return (\n    <div className=\"tag\">\n    <ul>{\n      likes.map((item, index)=>\n      <li key={index}>{item}</li>)\n    }</ul>\n  </div>\n  );\n}\nexport default App;\n/**/\n"]},"metadata":{},"sourceType":"module"}