{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ben\\\\Documents\\\\xdrive\\\\Apples\\\\Projects\\\\AboutMe\\\\aboutme\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react'; //make object.keys the first variable used to populate the list, then change the array to object.values much easier\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState({\n    id: 0,\n    name: '',\n    skills: [],\n    likes: [],\n    contact: ''\n  });\n  const [meDisp, setMeDisp] = useState([...Object.keys(data)]);\n\n  const changeProp = (_index, _item) => {\n    var mutated = meDisp; //if the display item is a key of the object, set it to the value\n\n    if (Object.keys(data).includes(_item)) {\n      //if the value is an array format it for reading\n      typeof data[_item] === 'object' ? mutated.splice(_index, 1, data[_item].join(', ')) : mutated.splice(_index, 1, data[_item]);\n      document.getElementById(`cues${_index}`).textContent;\n    } else {\n      mutated.splice(_index, 1, Object.keys(data)[_index]);\n      setMeDisp([...mutated]);\n    }\n  };\n\n  useEffect(() => {\n    //api fetch goes here\n    //Note: template for actions is 'controller/action/id?'\n    const fetchMe = async () => {\n      const response = await fetch(\"https://localhost:7010/Owner/aboutme\");\n      let myData;\n\n      try {\n        myData = await response.json();\n        setData(myData);\n      } catch (err) {\n        alert(err);\n      }\n\n      console.log(myData);\n    };\n\n    fetchMe();\n    setMeDisp(Object.keys(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"About Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: meDisp.slice(1).map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          id: 'cues' + index,\n          className: \"tag\",\n          onClick: () => changeProp(index + 1, item),\n          children: item.toString()\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"pEPenedKx1YhnOycjKpVdoB1Rh8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Ben/Documents/xdrive/Apples/Projects/AboutMe/aboutme/src/App.js"],"names":["useState","useEffect","App","data","setData","id","name","skills","likes","contact","meDisp","setMeDisp","Object","keys","changeProp","_index","_item","mutated","includes","splice","join","document","getElementById","textContent","fetchMe","response","fetch","myData","json","err","alert","console","log","slice","map","item","index","toString"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\n//make object.keys the first variable used to populate the list, then change the array to object.values much easier\nfunction App() {\n  const [data, setData]=useState({id:0, name:'', skills:[], likes:[], contact:''});\n  const [meDisp, setMeDisp]=useState([...Object.keys(data)]);\n  const changeProp = (_index, _item) => {\n    var mutated = meDisp;\n    //if the display item is a key of the object, set it to the value\n    if (Object.keys(data).includes(_item)) {\n      //if the value is an array format it for reading\n      (typeof(data[_item])==='object') ? mutated.splice(_index, 1, data[_item].join(', ')) : mutated.splice(_index, 1, data[_item]);\n      document.getElementById(`cues${_index}`).textContent; \n    } else {\n      mutated.splice(_index,1,Object.keys(data)[_index]);\n      setMeDisp([...mutated]);\n    }\n  }\n  useEffect(()=>{\n //api fetch goes here\n //Note: template for actions is 'controller/action/id?'\n const fetchMe = async () => {\n  const response = await fetch(\"https://localhost:7010/Owner/aboutme\");\n  let myData;\n  try {\n    myData = await response.json();\n    setData(myData);\n  } catch(err) {\n    alert(err);\n  }\n  console.log(myData);\n  }\n  fetchMe();\n  setMeDisp(Object.keys(data));\n  },[]);\n  return (\n\t\t<div id=\"content\">\n\t\t\t<h1>About Me</h1>\n\t\t\t<div>\n\t\t\t\t<ul>\n\t\t\t\t\t{meDisp.slice(1).map((item, index) => (\n\t\t\t\t\t\t<li id={'cues' + index} key={index} className=\"tag\" onClick={() => changeProp(index + 1, item)}>\n\t\t\t\t\t\t\t{item.toString()}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}